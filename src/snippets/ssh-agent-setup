# setup ssh-agent
# set environment variables if user's agent already exists

[ -z "$SSH_AUTH_SOCK" ] && SSH_AUTH_SOCK=$(ls -l $TMPDIR/ssh-*/agent.* 2> /dev/null | grep $(whoami) | awk '{print $9}' | tail -n1)
[ -z "$SSH_AGENT_PID" -a -z `echo $SSH_AUTH_SOCK | cut -d. -f2` ] && SSH_AGENT_PID=$((`echo $SSH_AUTH_SOCK | cut -d. -f2` + 1))
[ -n "$SSH_AUTH_SOCK" ] && export SSH_AUTH_SOCK
[ -n "$SSH_AGENT_PID" ] && export SSH_AGENT_PID

# start agent if necessary
if [ -z $SSH_AGENT_PID ] && [ -z $SSH_TTY ]; then  # if no agent & not in ssh
  killall ssh-agent
  eval `ssh-agent -s` > /dev/null
fi

# setup addition of keys when needed
if [ -z "$SSH_TTY" ] ; then                     # if not using ssh
  ssh-add -l > /dev/null 2>&1                   # check for keys
  if [ $? -ne 0 ] ; then
    alias ssh='ssh-add -l > /dev/null || ssh-add && unalias ssh ; ssh'
    if [ -f "/usr/lib/ssh/x11-ssh-askpass" ] ; then
      SSH_ASKPASS="/usr/lib/ssh/x11-ssh-askpass" ; export SSH_ASKPASS
    fi
  fi
fi

function fixssh {
  for i in $TMPDIR/ssh-*/*
  do
    export SSH_AUTH_SOCK=$i
    ssh-add -l && break
  done
}

fixssh 2>&1 > /dev/null
